//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Discussions = newDiscussionsTable("", "discussions", "")

type discussionsTable struct {
	sqlite.Table

	// Columns
	ID           sqlite.ColumnInteger
	CreationTime sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type DiscussionsTable struct {
	discussionsTable

	EXCLUDED discussionsTable
}

// AS creates new DiscussionsTable with assigned alias
func (a DiscussionsTable) AS(alias string) *DiscussionsTable {
	return newDiscussionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DiscussionsTable with assigned schema name
func (a DiscussionsTable) FromSchema(schemaName string) *DiscussionsTable {
	return newDiscussionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DiscussionsTable with assigned table prefix
func (a DiscussionsTable) WithPrefix(prefix string) *DiscussionsTable {
	return newDiscussionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DiscussionsTable with assigned table suffix
func (a DiscussionsTable) WithSuffix(suffix string) *DiscussionsTable {
	return newDiscussionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDiscussionsTable(schemaName, tableName, alias string) *DiscussionsTable {
	return &DiscussionsTable{
		discussionsTable: newDiscussionsTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newDiscussionsTableImpl("", "excluded", ""),
	}
}

func newDiscussionsTableImpl(schemaName, tableName, alias string) discussionsTable {
	var (
		IDColumn           = sqlite.IntegerColumn("id")
		CreationTimeColumn = sqlite.IntegerColumn("creation_time")
		allColumns         = sqlite.ColumnList{IDColumn, CreationTimeColumn}
		mutableColumns     = sqlite.ColumnList{CreationTimeColumn}
	)

	return discussionsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		CreationTime: CreationTimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
