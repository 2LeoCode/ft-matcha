//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var UsersTags = newUsersTagsTable("", "users_tags", "")

type usersTagsTable struct {
	sqlite.Table

	// Columns
	UserID sqlite.ColumnInteger
	TagID  sqlite.ColumnInteger

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type UsersTagsTable struct {
	usersTagsTable

	EXCLUDED usersTagsTable
}

// AS creates new UsersTagsTable with assigned alias
func (a UsersTagsTable) AS(alias string) *UsersTagsTable {
	return newUsersTagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersTagsTable with assigned schema name
func (a UsersTagsTable) FromSchema(schemaName string) *UsersTagsTable {
	return newUsersTagsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersTagsTable with assigned table prefix
func (a UsersTagsTable) WithPrefix(prefix string) *UsersTagsTable {
	return newUsersTagsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersTagsTable with assigned table suffix
func (a UsersTagsTable) WithSuffix(suffix string) *UsersTagsTable {
	return newUsersTagsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersTagsTable(schemaName, tableName, alias string) *UsersTagsTable {
	return &UsersTagsTable{
		usersTagsTable: newUsersTagsTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newUsersTagsTableImpl("", "excluded", ""),
	}
}

func newUsersTagsTableImpl(schemaName, tableName, alias string) usersTagsTable {
	var (
		UserIDColumn   = sqlite.IntegerColumn("user_id")
		TagIDColumn    = sqlite.IntegerColumn("tag_id")
		allColumns     = sqlite.ColumnList{UserIDColumn, TagIDColumn}
		mutableColumns = sqlite.ColumnList{UserIDColumn, TagIDColumn}
	)

	return usersTagsTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID: UserIDColumn,
		TagID:  TagIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
